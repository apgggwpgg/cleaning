from telegram.ext import Application, CommandHandler
from apscheduler.schedulers.background import BackgroundScheduler
import logging
import os

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TOKEN")
CHAT_ID = int(os.getenv("CHAT_ID"))

# –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∏ –∑–æ–Ω—ã
users = ["–ê–ª–∞–Ω", "–ì–µ–Ω–∞", "–†–æ–º–∞"]
zones = ["–í–∞–Ω–Ω–∞/–¢—É–∞–ª–µ—Ç", "–ö—É—Ö–Ω—è", "–ö–æ—Ä–∏–¥–æ—Ä"]
current_week = 0

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
def send_schedule():
    global current_week
    rotation = users[current_week % len(users):] + users[:current_week % len(users)]
    assignments = list(zip(zones, rotation))
    message = "üßπ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–±–æ—Ä–∫–∏ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é:\n\n"
    for zone, person in assignments:
        message += f"{zone}: {person}\n"
    application.bot.send_message(chat_id=CHAT_ID, text=message)
    current_week += 1

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update, context):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é. üßΩ")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
application = Application.builder().token(TOKEN).build()
application.add_handler(CommandHandler("start", start))

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
scheduler = BackgroundScheduler()
scheduler.add_job(send_schedule, trigger="interval", weeks=1)
scheduler.start()

# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
send_schedule()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    application.run_polling()
